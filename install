#!/usr/bin/env bash

set -e

# Exporting the specific shell we want to work with:

SHELL='/bin/zsh'
export SHELL

if [[ $(xcode-select --version) ]]; then
  echo Xcode command tools already installed
else
  echo "Installing Xcode commandline tools"
  $(xcode-select --install)
  echo "Installing Rosetta 2"
  $(softwareupdate --install-rosetta --agree-to-license)
fi

if [ -d ~/.oh-my-zsh ] ; then
    echo "Attempting to update Oh My ZSH"
    omz update
else
    echo "Attempting to install Oh My ZSH"
    sh -c "$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)"
    git clone --depth=1 https://github.com/romkatv/powerlevel10k.git ${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}/themes/powerlevel10k
fi

export PATH="$PATH:/opt/homebrew/bin"

if [[ $(brew --version) ]] ; then
    echo "Attempting to update Homebrew from version $(brew --version)"
    brew update
else
    echo "Attempting to install Homebrew"
    /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
fi

# Install / Upgrade RVM
curl -sSL https://get.rvm.io | bash -s stable

# Standard dotbot pre-configuration:

readonly DOTBOT_DIR='dotbot'
readonly DOTBOT_BIN='bin/dotbot'
readonly BASEDIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

readonly ARGS="$@"

cd "$BASEDIR"
git submodule sync --quiet --recursive
git submodule update --init --recursive

# Linking dotfiles:

run_dotbot () {
  local config
  config="$1"

  "$BASEDIR/$DOTBOT_DIR/$DOTBOT_BIN" \
    -d "$BASEDIR" \
    --plugin-dir dotbot-brewfile \
    -c "$config" $ARGS
}

run_dotbot 'steps/terminal.yml' || true
run_dotbot 'steps/dependencies.yml' || true
